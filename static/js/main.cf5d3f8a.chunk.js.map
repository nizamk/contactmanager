{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","console","log","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","children","props","react_default","createElement","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","_ref","Fragment","contacts_Contact","Header","branding","href","defaultProps","About","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","proptypes","PropTypes","string","isRequired","func","AddContacts","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","_ref2","layout_TextInputGroup","PureComponent","EditContact","updContact","match","params","put","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","AddContact","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cf5d3f8a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\n// reducer: (prevState, action) => newState\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_CONTACT':\n      console.log('DELETE_CONTACT');\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n\n    case 'ADD_CONTACT':\n      console.log('ADD_CONTACT');\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n\n    case 'UPDATE_CONTACT':\n      console.log('UPDATE_CONTACT');\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  async componentDidMount() {\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    const { children } = this.props;\n    return <Context.Provider value={this.state}>{children}</Context.Provider>;\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  static propTypes = {\n    contact: PropTypes.object.isRequired\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n    dispatch({ type: 'DELETE_CONTACT', payload: id });\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{' '}\n                <i\n                  onClick={() =>\n                    this.setState({\n                      showContactInfo: !this.state.showContactInfo\n                    })\n                  }\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: 'pointer' }}\n                />\n                <i\n                  className=\"fas fa-times\"\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n                <Link to={`/contact/edit/${id}`}>\n                  <i \n                    className=\"fas fa-pencil-alt\"\n                    style={{ \n                      cursor: 'pointer', \n                      float: 'right', \n                      color: 'black',\n                      marginRight: '01rem'\n                     }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {({ contacts }) => {\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n              <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = ({ branding }) => {\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'My App'\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react'\n\nexport default props => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.1.0</p>\n    </div>\n  )\n}\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div>\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.proptypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string.isRequired\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextInputGroup;\n","import React, { PureComponent } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\n// import uuid from 'uuid';\nimport axios from 'axios';\n\nclass AddContacts extends PureComponent {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required.' } });\n      return;\n    }\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required.' } });\n      return;\n    }\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required.' } });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    const res = await axios.post(\n      'https://jsonplaceholder.typicode.com/users',\n      newContact\n    );\n\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\n    // console.log(this.state);\n\n    // Clear the state\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    // Redirect\n    this.props.history.push('/');\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {({ dispatch }) => {\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email...\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContacts;\n","import React, { PureComponent } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\n// import uuid from 'uuid';\nimport axios from 'axios';\n\nclass EditContact extends PureComponent {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n    const contact = res.data;\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required.' } });\n      return;\n    }\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required.' } });\n      return;\n    }\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required.' } });\n      return;\n    }\n\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n\n    const { id } = this.props.match.params;\n\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\n\n    // Clear the state\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    // Redirect\n    this.props.history.push('/');\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {({ dispatch }) => {\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email...\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from 'react'\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">404 Page Not Found</h1>\n      <p className=\"lead\">Sorry, that page does not exists</p>\n    </div>\n  )\n}","import React, { Component } from 'react';\n\nclass Test extends Component {\n  state = {\n    title: '',\n    body: '',\n  };\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\n      .then(response => response.json())\n      .then(json => this.setState({\n        title: json.title, \n        body: json.body\n      })\n    );\n  }\n\n  // componentWillMount() {\n  //   console.log('WillMount');\n  // }\n\n  // componentDidUpdate() {\n  //   console.log('DidUpdate');\n  // }\n\n  // componentWillReceiveUpdate(nextProps, nextState) {\n  //   console.log('WillReceiveProps');\n  // }\n\n  // static getDerivedStateFromProps(nextProps, prevState) {\n  //   return {\n  //     test: 'Something'\n  //   };\n  // }\n\n  // getSnapshotBeforeUpdate(prevProps, prevState) {\n  //   console.log('getSnapshotBeforeUpdate...');\n  // }\n\n  render() {\n    const {title, body} = this.state;\n\n    return (\n      <div>\n        <h1>Title: {title}</h1> {' '}\n        <p>Body: {body}</p>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router >\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}